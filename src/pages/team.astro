---
import MemberColumn from '@components/team/MemberColumn.astro';
import Layout from '@layouts/Default.astro';
import { type CollectionEntry, getCollection } from 'astro:content';

type AllMembers = Record<
  CollectionEntry<'team'>['data']['role'],
  {
    active: CollectionEntry<'team'>[];
    inactive: CollectionEntry<'team'>[];
  }
>;

const members = await getCollection('team').then((members) =>
  members
    .toSorted((a, b) => a.data.sort - b.data.sort || a.id.localeCompare(b.id))
    .reduce<AllMembers>(
      (prev, curr) => {
        if (curr.data.inactive) {
          prev[curr.data.role].inactive.push(curr);
        } else {
          prev[curr.data.role].active.push(curr);
        }
        return prev;
      },
      {
        lead: { active: [], inactive: [] },
        dev: { active: [], inactive: [] },
        art: { active: [], inactive: [] },
        voice: { active: [], inactive: [] }
      }
    )
);
---

<Layout title="Our Team">
  <div class="team-grid grid">
    <div class="team-column g-col-lg-1 g-col-3">
      <MemberColumn
        title="Lead Developers"
        activeMembers={members.lead.active}
        inactiveMembers={members.lead.inactive}
      />
    </div>
    <div class="team-column g-col-lg-1 g-col-3">
      <MemberColumn title="Developers" activeMembers={members.dev.active} inactiveMembers={members.dev.inactive} />
    </div>
    <div class="team-column g-col-lg-1 g-col-3">
      <MemberColumn title="Artists" activeMembers={members.art.active} inactiveMembers={members.art.inactive} />
      <MemberColumn
        title="Voice Actors"
        activeMembers={members.voice.active}
        inactiveMembers={members.voice.inactive}
      />
    </div>
  </div>
</Layout>

<style>
  .team-grid {
    --bs-columns: 3;
  }

  .team-column {
    display: flex;
    flex-direction: column;
    gap: 2em;
  }
</style>
